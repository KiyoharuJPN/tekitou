//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/StandardKeyBind.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StandardKeyBind : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StandardKeyBind()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StandardKeyBind"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0a3596a4-c015-433f-92f5-4d468878cfce"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""836af4e6-7d7f-46d8-a457-a83641363c6d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d79edaf9-3249-4d04-b8cf-b35ef60e82eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NomalAttack"",
                    ""type"": ""Button"",
                    ""id"": ""23a55cc1-aa61-44b8-ba0e-b3348322d86e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillAttack"",
                    ""type"": ""Button"",
                    ""id"": ""20514183-e4cc-4ced-859a-19089b7362cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExAttack_L"",
                    ""type"": ""Button"",
                    ""id"": ""62b6e7ca-4009-41f9-ac3e-5a670596e47e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExAttack_R"",
                    ""type"": ""Button"",
                    ""id"": ""7b813615-4e32-4592-a9c6-41f6a753db56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1526fb64-da26-44d0-82b0-98326bb0d9fa"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""f8eb393c-8d16-4fdf-9611-a29befc432bc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fafa6f54-c09b-4686-9f91-cf6f25d6651f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6bca4470-3bcd-4d03-bca5-9e7243caae32"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bdfeeff7-147d-4908-857e-f0f1fd75d0bd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4bc72ac0-0a39-4c5f-848b-1e81c855ee12"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a442f54f-f330-467e-8ad7-30ed00d6838f"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""869325eb-fde2-4012-81e8-909a41ea6155"",
                    ""path"": ""<DualShockGamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3a27ba7-4c1e-4496-a646-c5f1225a72ad"",
                    ""path"": ""<XInputController>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f6a48eb-c04e-45ad-b1c6-b13317f26d58"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50399d82-3310-4749-9bb5-c2ac2d6ec6f2"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50f72f31-caa4-4c2f-9738-062c0531c05b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a47b5731-59c4-47f3-997e-4cf3411acbf0"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NomalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""008f45ae-7c86-4396-80d2-6fcb00c14d04"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NomalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19fb4f31-4344-41bd-b37e-fcb8ff351268"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NomalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0f0abc9-1852-4d7e-885d-96f349d4fba3"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""072e3af9-6780-4670-b20f-97223eb31eee"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb9e5450-412e-4551-af40-6527279410a5"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExAttack_L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73a416b5-bd89-460d-a960-0b4ee54ce918"",
                    ""path"": ""<DualShockGamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExAttack_L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2662fa13-d756-4335-b191-16495f1481bb"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExAttack_R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc94cdbe-5028-4568-8166-3bc69b713828"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExAttack_R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuKey"",
            ""id"": ""b0612040-26f8-4d53-b771-24f1b353b752"",
            ""actions"": [
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""0645bfa0-c6ca-4e6b-8f41-7e97d1f91367"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decision"",
                    ""type"": ""Button"",
                    ""id"": ""9518e432-2bc8-4b76-8c7a-69b2a074cfae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option"",
                    ""type"": ""Button"",
                    ""id"": ""06d0c620-b7c8-4247-bef1-109ea892755c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9cfc3d8f-75cc-4724-834e-37c447351136"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5c641774-0044-4fc9-96c2-85d175ab8ded"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80dfdb1b-b215-42a3-bab0-5fa61637b333"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1634dfeb-c224-4d4d-9472-b3471ddbf456"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82232346-00cb-43d7-9350-3dd725c2e276"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71904679-4bde-4205-ba6f-5e39485d8ba2"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8acc9aaf-c886-4c50-bc45-062988c7b1e6"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decision"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3def4e44-7235-4c8b-8b8d-70420ce0de59"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5c59b55-b650-4b29-8a3c-735da53f7aeb"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eff35cb-10ad-4dc2-b863-0a9ac73072e1"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e122768a-56a6-4ccd-8f2b-2057dc44aa9b"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""76e7ad79-cd30-49f3-9ab2-e26c9fc3962c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4ccb31c3-1006-4c1a-bf70-63e9deb7c4e3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3195f8e0-86f1-427d-8248-24a164afc2d2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fed25d4b-f872-402f-b1da-4718a6f336f5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7a8a0175-5c00-46a9-bdef-ce7eb752c2bc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""72012e3d-e456-4e92-8b75-73f1fe0a926f"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a1da134-f533-4e22-831c-126184f9adf2"",
                    ""path"": ""<DualShockGamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d04f75a1-33bd-4f28-ab2f-d952f7aa2824"",
                    ""path"": ""<XInputController>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DemoMenuKey"",
            ""id"": ""4026dd2a-93e5-4d72-87d3-b1a910b1fda3"",
            ""actions"": [
                {
                    ""name"": ""SelectUp"",
                    ""type"": ""Button"",
                    ""id"": ""3708445c-85e7-4874-856e-0e30a977f52f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectDown"",
                    ""type"": ""Button"",
                    ""id"": ""1d3d057c-c685-471d-ab27-256d15a35399"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRight"",
                    ""type"": ""Button"",
                    ""id"": ""157c5b21-f845-443e-a3e9-32e33e3d6ebf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e7712e0f-b19a-438c-813c-ee33e50ef679"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuOnOff"",
                    ""type"": ""Button"",
                    ""id"": ""9b910cd3-3026-4375-9ea8-1a4e154f739d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Warp"",
                    ""type"": ""Button"",
                    ""id"": ""05090cd2-d8eb-4615-b137-3ff110526185"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""71db9095-8e4c-496e-9424-6d4a34f28794"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuOnOff"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab4cfd6c-6333-41b3-806d-84edb4daf22a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Warp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b982680b-66d1-48b2-875d-a2408963c81c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e71d7e92-d089-4b17-8054-7d4df9a22d2f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c94bc49e-216c-48b1-ab0e-af31d427c794"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33c8022c-c14e-41bb-806d-c59d7c10f5fd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_NomalAttack = m_Player.FindAction("NomalAttack", throwIfNotFound: true);
        m_Player_SkillAttack = m_Player.FindAction("SkillAttack", throwIfNotFound: true);
        m_Player_ExAttack_L = m_Player.FindAction("ExAttack_L", throwIfNotFound: true);
        m_Player_ExAttack_R = m_Player.FindAction("ExAttack_R", throwIfNotFound: true);
        // MenuKey
        m_MenuKey = asset.FindActionMap("MenuKey", throwIfNotFound: true);
        m_MenuKey_Back = m_MenuKey.FindAction("Back", throwIfNotFound: true);
        m_MenuKey_Decision = m_MenuKey.FindAction("Decision", throwIfNotFound: true);
        m_MenuKey_Option = m_MenuKey.FindAction("Option", throwIfNotFound: true);
        m_MenuKey_Move = m_MenuKey.FindAction("Move", throwIfNotFound: true);
        // DemoMenuKey
        m_DemoMenuKey = asset.FindActionMap("DemoMenuKey", throwIfNotFound: true);
        m_DemoMenuKey_SelectUp = m_DemoMenuKey.FindAction("SelectUp", throwIfNotFound: true);
        m_DemoMenuKey_SelectDown = m_DemoMenuKey.FindAction("SelectDown", throwIfNotFound: true);
        m_DemoMenuKey_SelectRight = m_DemoMenuKey.FindAction("SelectRight", throwIfNotFound: true);
        m_DemoMenuKey_SelectLeft = m_DemoMenuKey.FindAction("SelectLeft", throwIfNotFound: true);
        m_DemoMenuKey_MenuOnOff = m_DemoMenuKey.FindAction("MenuOnOff", throwIfNotFound: true);
        m_DemoMenuKey_Warp = m_DemoMenuKey.FindAction("Warp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_NomalAttack;
    private readonly InputAction m_Player_SkillAttack;
    private readonly InputAction m_Player_ExAttack_L;
    private readonly InputAction m_Player_ExAttack_R;
    public struct PlayerActions
    {
        private @StandardKeyBind m_Wrapper;
        public PlayerActions(@StandardKeyBind wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @NomalAttack => m_Wrapper.m_Player_NomalAttack;
        public InputAction @SkillAttack => m_Wrapper.m_Player_SkillAttack;
        public InputAction @ExAttack_L => m_Wrapper.m_Player_ExAttack_L;
        public InputAction @ExAttack_R => m_Wrapper.m_Player_ExAttack_R;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @NomalAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNomalAttack;
                @NomalAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNomalAttack;
                @NomalAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnNomalAttack;
                @SkillAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkillAttack;
                @SkillAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkillAttack;
                @SkillAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSkillAttack;
                @ExAttack_L.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_L;
                @ExAttack_L.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_L;
                @ExAttack_L.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_L;
                @ExAttack_R.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_R;
                @ExAttack_R.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_R;
                @ExAttack_R.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExAttack_R;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @NomalAttack.started += instance.OnNomalAttack;
                @NomalAttack.performed += instance.OnNomalAttack;
                @NomalAttack.canceled += instance.OnNomalAttack;
                @SkillAttack.started += instance.OnSkillAttack;
                @SkillAttack.performed += instance.OnSkillAttack;
                @SkillAttack.canceled += instance.OnSkillAttack;
                @ExAttack_L.started += instance.OnExAttack_L;
                @ExAttack_L.performed += instance.OnExAttack_L;
                @ExAttack_L.canceled += instance.OnExAttack_L;
                @ExAttack_R.started += instance.OnExAttack_R;
                @ExAttack_R.performed += instance.OnExAttack_R;
                @ExAttack_R.canceled += instance.OnExAttack_R;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // MenuKey
    private readonly InputActionMap m_MenuKey;
    private IMenuKeyActions m_MenuKeyActionsCallbackInterface;
    private readonly InputAction m_MenuKey_Back;
    private readonly InputAction m_MenuKey_Decision;
    private readonly InputAction m_MenuKey_Option;
    private readonly InputAction m_MenuKey_Move;
    public struct MenuKeyActions
    {
        private @StandardKeyBind m_Wrapper;
        public MenuKeyActions(@StandardKeyBind wrapper) { m_Wrapper = wrapper; }
        public InputAction @Back => m_Wrapper.m_MenuKey_Back;
        public InputAction @Decision => m_Wrapper.m_MenuKey_Decision;
        public InputAction @Option => m_Wrapper.m_MenuKey_Option;
        public InputAction @Move => m_Wrapper.m_MenuKey_Move;
        public InputActionMap Get() { return m_Wrapper.m_MenuKey; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuKeyActions set) { return set.Get(); }
        public void SetCallbacks(IMenuKeyActions instance)
        {
            if (m_Wrapper.m_MenuKeyActionsCallbackInterface != null)
            {
                @Back.started -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnBack;
                @Decision.started -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnDecision;
                @Decision.performed -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnDecision;
                @Decision.canceled -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnDecision;
                @Option.started -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnOption;
                @Option.performed -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnOption;
                @Option.canceled -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnOption;
                @Move.started -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MenuKeyActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_MenuKeyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Decision.started += instance.OnDecision;
                @Decision.performed += instance.OnDecision;
                @Decision.canceled += instance.OnDecision;
                @Option.started += instance.OnOption;
                @Option.performed += instance.OnOption;
                @Option.canceled += instance.OnOption;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public MenuKeyActions @MenuKey => new MenuKeyActions(this);

    // DemoMenuKey
    private readonly InputActionMap m_DemoMenuKey;
    private IDemoMenuKeyActions m_DemoMenuKeyActionsCallbackInterface;
    private readonly InputAction m_DemoMenuKey_SelectUp;
    private readonly InputAction m_DemoMenuKey_SelectDown;
    private readonly InputAction m_DemoMenuKey_SelectRight;
    private readonly InputAction m_DemoMenuKey_SelectLeft;
    private readonly InputAction m_DemoMenuKey_MenuOnOff;
    private readonly InputAction m_DemoMenuKey_Warp;
    public struct DemoMenuKeyActions
    {
        private @StandardKeyBind m_Wrapper;
        public DemoMenuKeyActions(@StandardKeyBind wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectUp => m_Wrapper.m_DemoMenuKey_SelectUp;
        public InputAction @SelectDown => m_Wrapper.m_DemoMenuKey_SelectDown;
        public InputAction @SelectRight => m_Wrapper.m_DemoMenuKey_SelectRight;
        public InputAction @SelectLeft => m_Wrapper.m_DemoMenuKey_SelectLeft;
        public InputAction @MenuOnOff => m_Wrapper.m_DemoMenuKey_MenuOnOff;
        public InputAction @Warp => m_Wrapper.m_DemoMenuKey_Warp;
        public InputActionMap Get() { return m_Wrapper.m_DemoMenuKey; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DemoMenuKeyActions set) { return set.Get(); }
        public void SetCallbacks(IDemoMenuKeyActions instance)
        {
            if (m_Wrapper.m_DemoMenuKeyActionsCallbackInterface != null)
            {
                @SelectUp.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectUp;
                @SelectUp.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectUp;
                @SelectUp.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectUp;
                @SelectDown.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectDown;
                @SelectDown.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectDown;
                @SelectDown.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectDown;
                @SelectRight.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectRight;
                @SelectRight.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectRight;
                @SelectRight.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectRight;
                @SelectLeft.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnSelectLeft;
                @MenuOnOff.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnMenuOnOff;
                @MenuOnOff.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnMenuOnOff;
                @MenuOnOff.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnMenuOnOff;
                @Warp.started -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnWarp;
                @Warp.performed -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnWarp;
                @Warp.canceled -= m_Wrapper.m_DemoMenuKeyActionsCallbackInterface.OnWarp;
            }
            m_Wrapper.m_DemoMenuKeyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SelectUp.started += instance.OnSelectUp;
                @SelectUp.performed += instance.OnSelectUp;
                @SelectUp.canceled += instance.OnSelectUp;
                @SelectDown.started += instance.OnSelectDown;
                @SelectDown.performed += instance.OnSelectDown;
                @SelectDown.canceled += instance.OnSelectDown;
                @SelectRight.started += instance.OnSelectRight;
                @SelectRight.performed += instance.OnSelectRight;
                @SelectRight.canceled += instance.OnSelectRight;
                @SelectLeft.started += instance.OnSelectLeft;
                @SelectLeft.performed += instance.OnSelectLeft;
                @SelectLeft.canceled += instance.OnSelectLeft;
                @MenuOnOff.started += instance.OnMenuOnOff;
                @MenuOnOff.performed += instance.OnMenuOnOff;
                @MenuOnOff.canceled += instance.OnMenuOnOff;
                @Warp.started += instance.OnWarp;
                @Warp.performed += instance.OnWarp;
                @Warp.canceled += instance.OnWarp;
            }
        }
    }
    public DemoMenuKeyActions @DemoMenuKey => new DemoMenuKeyActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnNomalAttack(InputAction.CallbackContext context);
        void OnSkillAttack(InputAction.CallbackContext context);
        void OnExAttack_L(InputAction.CallbackContext context);
        void OnExAttack_R(InputAction.CallbackContext context);
    }
    public interface IMenuKeyActions
    {
        void OnBack(InputAction.CallbackContext context);
        void OnDecision(InputAction.CallbackContext context);
        void OnOption(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
    public interface IDemoMenuKeyActions
    {
        void OnSelectUp(InputAction.CallbackContext context);
        void OnSelectDown(InputAction.CallbackContext context);
        void OnSelectRight(InputAction.CallbackContext context);
        void OnSelectLeft(InputAction.CallbackContext context);
        void OnMenuOnOff(InputAction.CallbackContext context);
        void OnWarp(InputAction.CallbackContext context);
    }
}
